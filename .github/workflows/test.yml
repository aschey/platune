on: [push]

name: CI

jobs:
  rust:
    env:
      SQLX_OFFLINE: true
      RUSTFLAGS: "-Cinstrument-coverage"
      LLVM_PROFILE_FILE: "platune-%p-%m.profraw"
      PROTOC: "/home/runner/protoc/bin/protoc"
    name: Run Rust tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: apt-get update
        # act doesn't have sudo installed but it's required on the real actions runner
        run: $(command -v sudo>/dev/null && echo "sudo") apt-get update
      - name: Install deps
        run: |
          $(command -v sudo>/dev/null && echo "sudo") apt-get install -y libssl-dev libasound2-dev git
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: cache-${{ hashFiles('**/Cargo.lock') }}
      - name: Clippy
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protoc-3.19.4-linux-x86_64.zip
          unzip protoc-3.19.4-linux-x86_64.zip -d "$HOME/protoc"
          # TODO: re-enable for every crate once tonic fixes clippy warnings
          cargo clippy -p libplatune-management -p libplatune-player -- -D warnings
      - name: Test
        run: |
          # Install precompiled binaries to improve build time
          wget https://github.com/ryankurte/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-gnu.tgz -O cargo-binstall.tgz
          tar -xzvf cargo-binstall.tgz
          ./cargo-binstall grcov --no-confirm --force
          ./cargo-binstall cargo-nextest --no-confirm --force
          rustup component add llvm-tools-preview 
          cargo nextest run --locked
          grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing --ignore "target/**/*" --ignore "**/*/*_test.rs" -o ./target/debug/lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          verbose: true
          fail_ci_if_error: true
          files: ./target/debug/lcov.info
  go:
    name: Run Go tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Test
        run: cd platune-cli && go build && TERM=xterm-256color script -q -e -c "go test ./... -v"
