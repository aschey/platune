syntax = "proto3";

option java_multiple_files = true;
option java_package = "management.rpc";
option java_outer_classname = "ManagementProto";
option go_package = "github.com/aschey/platune";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
package management_rpc;

service Management {
  rpc StartSync(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc AddFolders(FoldersMessage) returns (google.protobuf.Empty);
  rpc GetAllFolders(google.protobuf.Empty) returns (FoldersMessage);
  rpc RegisterMount(RegisteredMountMessage) returns (google.protobuf.Empty);
  rpc GetRegisteredMount(google.protobuf.Empty)
      returns (RegisteredMountMessage);
  rpc Search(stream SearchRequest) returns (stream SearchResponse);
  rpc Lookup(LookupRequest) returns (LookupResponse);
  rpc GetSongByPath(PathMessage) returns (SongResponse);
  rpc GetAlbumsByAlbumArtists(IdMessage) returns (AlbumResponse);
  rpc GetDeleted(google.protobuf.Empty) returns (GetDeletedResponse);
  rpc DeleteTracks(IdMessage) returns (google.protobuf.Empty);
  rpc SubscribeEvents(google.protobuf.Empty) returns (stream Progress);
}

message Progress {
  string job = 1;
  float percentage = 2;
  bool finished = 3;
}

message FoldersMessage { repeated string folders = 1; }

message RegisteredMountMessage { string mount = 1; }

message IdMessage { repeated int64 ids = 1; }

message PathMessage { string path = 1; }

message SearchRequest {
  string query = 1;
  optional string start_separator = 2;
  optional string end_separator = 3;
}

message LookupRequest {
  EntryType entry_type = 1;
  repeated int64 correlation_ids = 2;
}

message SongResponse { optional LookupEntry song = 1; }

message AlbumResponse { repeated AlbumEntry entries = 1; }

message AlbumEntry {
  string album = 1;
  int64 album_id = 2;
  string album_artist = 3;
  int64 album_artist_id = 4;
}

message LookupEntry {
  string artist = 1;
  string album_artist = 2;
  string album = 3;
  string song = 4;
  string path = 5;
  int64 track = 6;
  google.protobuf.Timestamp duration = 7;
}

message LookupResponse { repeated LookupEntry entries = 1; }

enum EntryType {
  ALBUM = 0;
  SONG = 1;
  ARTIST = 2;
}

message SearchResult {
  string entry = 1;
  EntryType entry_type = 2;
  optional string artist = 3;
  repeated int64 correlation_ids = 4;
  string description = 5;
}

message SearchResponse { repeated SearchResult results = 1; }

message DeletedResult {
  string path = 1;
  int64 id = 2;
}
message GetDeletedResponse { repeated DeletedResult results = 1; }