// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/aschey/platune/cli/cmd/folder"
	"github.com/aschey/platune/cli/cmd/queue"
	"github.com/aschey/platune/cli/internal"
)

// Injectors from wire.go:

func InitializeCommands() (commands, error) {
	playerClient, err := internal.NewPlayerClient()
	if err != nil {
		return commands{}, err
	}
	cmdPauseCmd := newPauseCmd(playerClient)
	cmdResumeCmd := newResumeCmd(playerClient)
	managementClient, err := internal.NewManagementClient()
	if err != nil {
		return commands{}, err
	}
	folderCmd := folder.InitializeFolderCommand(playerClient, managementClient)
	queueCmd := queue.InitializeQueueCommand(playerClient, managementClient)
	cmdCommands := commands{
		pause:  cmdPauseCmd,
		resume: cmdResumeCmd,
		folder: folderCmd,
		queue:  queueCmd,
	}
	return cmdCommands, nil
}

// wire.go:

type commands struct {
	pause  pauseCmd
	resume resumeCmd
	folder folder.FolderCmd
	queue  queue.QueueCmd
}
