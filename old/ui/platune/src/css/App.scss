html,
body {
  background: rgba(var(--background-main), 1);
  color: rgba(var(--text-main), 1);
  overflow: hidden;
}
body * {
  user-select: none;
}

:focus {
  outline: none;
  outline-width: 0px;
  outline-offset: 0px;
}

button,
.search,
.bp3-input {
  -webkit-app-region: no-drag;
}

canvas {
  width: 100%;
  height: 100%;
}

.search {
  position: relative;
  top: 5px;
  margin-left: 10px;
  float: left;
  max-width: 300px;
}

.Expand-Column {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.scroll {
  overflow: scroll;
}

.App-link {
  color: #61dafb;
}

::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  border-radius: 10px;
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
}

::-webkit-scrollbar-corner {
  background: rgba(0, 0, 0, 0);
}

.nofocus:focus {
  outline: none;
}

.grid-cell {
  display: flex;
  flex: 1;
  height: 25px;
}

.card {
  border: 1px solid rgba(var(--card-shadow), 0.5);
  box-shadow: rgba(var(--card-shadow), 0.5) 1px 1px;
  background: rgba(var(--background-secondary), 1);
  border-radius: 5px;
  transition: var(--transition);
}

.visualizer {
  background: rgba(var(--visualizer-background), 0.2);
}

.ReactVirtualized__Table {
  display: inline-block;
  border: 2px solid rgba(0, 0, 0, 0.1);
}

.ReactVirtualized__Table__headerColumn {
  display: flex;
  flex-direction: row;
  justify-content: center;
  padding: 0;
  text-transform: none;
}

.ReactVirtualized__Table__headerTruncatedText {
  flex: auto;
}

.ReactVirtualized__Grid {
  outline: none;
}

.ReactVirtualized__Table__row {
  outline: none;
}

.ReactVirtualized__Table__headerRow {
  padding-left: var(--header-padding);
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.4);
  position: relative;
  z-index: 1;
  background: rgba(var(--background-secondary), 1);
}

.album-selected-row.has-art {
  .selected.grid-cell {
    background: rgba(var(--grid-selected-background), 0.5);
  }

  @for $i from 1 through 20 {
    .grid-tag:nth-of-type(#{$i}) {
      border: 1px solid rgba(var(--tag-bg-#{$i}), 0.5) !important;
      background: rgba(var(--tag-bg-#{$i}), 0.3) !important;
      color: rgba(var(--tag-fg-#{$i}), 1) !important;
    }
  }
}

.selected.bp3-table-cell {
  background: rgba(var(--grid-selected-background-default), 0.5);
}

.ReactVirtualized__Grid__innerScrollContainer .row .striped-odd,
.ReactVirtualized__Table__row .rowParent .striped-odd:not(.selected) {
  transition: var(--transition);
  background: rgba(var(--grid-stripe1-default), 1);
}

.ReactVirtualized__Grid__innerScrollContainer .row .striped-even,
.ReactVirtualized__Table__row .rowParent .striped-even:not(.selected) {
  transition: var(--transition);
  background: rgba(var(--grid-stripe2-default), 1);
}

.DragHandle {
  flex: 0 0 16px;
  z-index: 2;
  cursor: col-resize;
  color: #0085ff;
}
.DragHandle:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.DragHandleActive,
.DragHandleActive:hover {
  color: #0b6fcc;
  z-index: 3;
}

.DragHandleIcon {
  flex: 0 0 12px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transform: var(--header-translate) !important;
}

.ReactVirtualized__Table__rowColumn {
  margin: 0;
}

.ReactVirtualized__Table__headerColumn {
  margin-right: 0;
}

.ReactVirtualized__Table__headerTruncatedText {
  transform: translate(-5px, 0);
}

.album-selected-row.has-art {
  transition: var(--transition);
  border: 1px solid rgba(var(--grid-selected-shadow-1), 1) !important;
  box-shadow: 3px 3px 3px 3px rgba(var(--grid-selected-shadow-1), 0.6) !important;
}

.album-selected-row {
  transition: var(--transition);
  border: 1px solid rgba(var(--grid-selected-shadow-1-default), 1) !important;
  box-shadow: 3px 3px 3px 3px rgba(var(--grid-selected-shadow-1-default), 0.6) !important;
}

.album-selected-row div {
  transition: var(--transition);
  font-weight: 600;
}

.has-art.album-selected-row div:not(.editing) {
  transition: var(--transition);
  color: rgba(var(--grid-selected-text-color), 1) !important;
}

.has-art .editing {
  transition: var(--transition);
  color: rgba(var(--grid-selected-editing-row-color), 1) !important;
}

:not(.has-art) .editing {
  transition: var(--transition);
  color: rgba(var(--text-secondary), 1) !important;
}

.has-art.ReactVirtualized__Table__row.album-selected-row .rowParent .striped-even:not(.selected) {
  transition: var(--transition);
  background: rgba(var(--grid-selected-stripe-even), 0.5);
}

.rowParent:first-child {
  border-top: rgba(16, 22, 26, 0.4) 1px solid;
}

.rowParent:last-child {
  border-bottom: rgba(16, 22, 26, 0.4) 1px solid;
}

.ReactVirtualized__Table__row.card div:last-of-type .rowParent {
  border-right: rgba(16, 22, 26, 0.4) 1px solid;
}

.ReactVirtualized__Table__rowColumn:first-of-type {
  margin: 0;
}

.has-art div.playing {
  transition: var(--transition);
  background: rgba(var(--grid-selected-playing-row-background), 0.6) !important;
}

div.playing {
  transition: var(--transition);
  background: rgba(var(--playing-row-background), 0.6) !important;
}

button.playing {
  transition: var(--transition);
  background: none !important;
}

.playing svg {
  transition: var(--transition);
  color: rgba(var(--text-color), 1);
}

svg[data-icon='list-detail-view'] {
  transform: rotate(180deg);
}

.song-progress-track {
  position: absolute;
  height: 5px;
  z-index: 1;
  background: linear-gradient(
      to right,
      rgba(var(--song-progress-color1), 1) 0%,
      rgba(var(--song-progress-color2), 1) 100%
    )
    fixed;
  border-radius: 7px;
  cursor: pointer;
}

.volume-slider {
  position: absolute;
  height: 5px;
  z-index: 1;
  background: rgba(var(--volume-slider-color), 1);
  border-radius: 7px;
  cursor: pointer;
}

.secondary-text {
  font-size: 12;
  color: rgba(var(--text-secondary), 0.8);
}

.tag-text {
  max-width: 120px;
  padding-right: 5px;
}

.sketch-picker {
  background: rgba(var(--background-secondary), 1) !important;
}

.sketch-picker input {
  background: rgba(var(--background-secondary), 1);
  color: rgba(var(--text-main), 1);
}

.sketch-picker span {
  color: rgba(var(--text-main), 1) !important;
}

.main-grid {
  transition: var(--table-transition) !important;
}
.main-grid * {
  transition: var(--table-transition) !important;
}

label {
  display: inline-block;
  width: 100px;
  text-align: right;
}
